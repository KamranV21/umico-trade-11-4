// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает сведения о счете Umico.
// 
// Параметры:
//  НомерСчета - Строка - номер счета карты лояльности
// 
// Возвращаемое значение:
//  см. UMC_ОбменСUmico.НоваяСтруктураСведенияОСчете.
Функция ПолучитьСведенияОСчете(НомерСчета) Экспорт
		
	Ресурс = "/customers/" + НомерСчета + "/balances";
	ТелоОтвета = ВыполнитьHTTPЗапрос("balance", "GET", Ресурс);	
	Возврат ОбработатьОтветПоСведениямОСчете(ТелоОтвета);
		
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаHTTPЗапросов

// Выполняет передачу HTTP-запроса на сервер Umico.
// 
// Параметры:
//  Команда - Строка - Команда
//  Метод - Строка - Метод
//  Ресурс - Строка - Ресурс
//  ТелоЗапроса - Строка - Тело запроса
//  Документ - Неопределено - Документ
// 
// Возвращаемое значение:
//  Неопределено, Строка - тело ответа в формате JSON или Неопределено
Функция ВыполнитьHTTPЗапрос(Команда, Метод, Ресурс, ТелоЗапроса = "", Документ = Неопределено)
		
	HTTPСоединение = Новый HTTPСоединение("integration-api.umico.az",,,,, Новый ЗащищенноеСоединениеOpenSSL());	
		
	Заголовки = Новый Соответствие();
	Заголовки.Вставить("ApiKey", APIKey);	
	Заголовки.Вставить("Content-Type", "application/json; charset=utf-8");
	
	HTTPЗапрос = Новый HTTPЗапрос(Заголовки, "/api/v1" + Ресурс);	
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса);
				
	Попытка
		HTTPОтвет = HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос);
	Исключение
		ОбщегоНазначения.СообщитьПользователю(ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	
	ТелоОтвета = HTTPОтвет.ПолучитьТелоКакСтроку();
	СформироватьЗаписьЖурналаЗапросовUmico(Команда, Метод, Ресурс, ТелоЗапроса, Документ, ТелоОтвета);
	
	Если HTTPОтвет.КодСостояния >= 200 И HTTPОтвет.КодСостояния < 300 Тогда
		Возврат ТелоОтвета;
	ИначеЕсли ТелоОтвета = "{""message"":""API rate limit exceeded""}" Тогда
		// Ошибка ожидания.
		Возврат Неопределено;	
	Иначе
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Ошибка при подключении к Umico. Код статуса: %1'"), HTTPОтвет.КодСостояния);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Формирует запись логов в журнале.
// 
// Параметры:
//  Команда - Строка - Команда
//  Метод - Строка - Метод
//  Ресурс - Строка - Ресурс
//  ТелоЗапроса - Строка - Тело запроса
//  Документ - Неопределено - Документ
//  ТелоОтвета - Неопределено, Строка - Тело ответа
Процедура СформироватьЗаписьЖурналаЗапросовUmico(Команда, Метод, Ресурс, ТелоЗапроса, Документ, ТелоОтвета)

	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	ЗаписьЖурнала = Справочники.UMC_ЖурналЗапросовКUmcio.СоздатьЭлемент();
	ЗаписьЖурнала.Дата = ТекущаяДатаСеанса();
	ЗаписьЖурнала.Пользователь = ТекущийПользователь;
	ЗаписьЖурнала.Команда = Команда;
	ЗаписьЖурнала.Метод = Метод;
	ЗаписьЖурнала.Ресурс = Ресурс;
	ЗаписьЖурнала.Запрос = ТелоЗапроса;
	ЗаписьЖурнала.Ответ = ТелоОтвета;
	ЗаписьЖурнала.Документ = Документ;
	ЗаписьЖурнала.Записать();

КонецПроцедуры

// Обработывает ответ по сведениям о счете.
// 
// Параметры:
//  ТелоОтвета - Неопределено, Строка - полученное тело ответа от Umico в формате от JSON
// 
// Возвращаемое значение:
//  см. UMC_ОбменСUmico.НоваяСтруктураСведенияОСчете.
Функция ОбработатьОтветПоСведениямОСчете(ТелоОтвета)
	
	СтруктураОтвета = UMC_ОбменСUmico.НоваяСтруктураСведенияОСчете();
	
	Если ТелоОтвета = "" Тогда
		Возврат СтруктураОтвета;
	КонецЕсли;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ТелоОтвета);
	СтруктураJSON = ПрочитатьJSON(ЧтениеJSON); // См. UMC_ОбменСUmico.НоваяСтруктураJSONBalance
	
	СтруктураОтвета.Результат = Истина;
	СтруктураОтвета.Сумма = СтруктураJSON.available_points;
	
	Возврат СтруктураОтвета;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
